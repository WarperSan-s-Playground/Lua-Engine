{
	"functions": {
		"importFile": {
			"documentation": "Imports the given file to this script\n\r* `file` File to import",
			"args": "file:String = null",
			"returns": "LuaMessage"
		},
		"playMusic": {
			"documentation": "Plays the given music\n\r* `path` Path of the music\n\r* `overrideMusic` Determines if this will overrride the current music\n\r* `volume` How loud the sound should be, from 0 to 1\n\r* `looped` Whether to loop this music",
			"args": "path:String = \"\", overrideMusic:Bool = true, volume:Float = 1.0, looped:Bool = true",
			"returns": "LuaMessage"
		},
		"removeFromGroup": {
			"documentation": "Removes the given element from the given group\n\r* `groupID` ID of the group to remove from\n\r* `elementID` ID of the element to remove",
			"args": "groupID:Int = -1, elementID:Int = -1",
			"returns": "LuaMessage"
		},
		"getRaw": {
			"documentation": "Fetches the raw value at the given path\n\r* `path` Path to the value request.",
			"args": "path:String = null",
			"returns": "LuaMessage<Dynamic>"
		},
		"loadGraphic": {
			"documentation": "Loads the given image to the given sprite\n\r* `id` Sprite to load to\n\r* `path` Image to load from\n\r* `xml` XML file to load frames from",
			"args": "id:Int = -1, path:String = \"\", xml:String = null",
			"returns": "LuaMessage"
		},
		"fromJSON": {
			"documentation": "Parses the given file as JSON\n\r* `file` File to parse\n\r@return Object created",
			"args": "file:String = null",
			"returns": "LuaMessage<Dynamic>"
		},
		"closeScript": {
			"documentation": "Closes the script associated with the given file\n\r* `file` File to close",
			"args": "file:String = null",
			"returns": "LuaMessage"
		},
		"makeSprite": {
			"documentation": "Creates a new sprite for this state\n\r@return ID of the sprite",
			"args": "x:Float = 0, y:Float = 0",
			"returns": "LuaMessage<Int>"
		},
		"createGroup": {
			"documentation": "Creates a new `FlxGroup`\n\r* `maxSize` Maximum amount of members allowed\n\r@return Unique ID of the added element",
			"args": "maxSize:Int = 0",
			"returns": "LuaMessage<Int>"
		},
		"addToGroup": {
			"documentation": "Adds the given element to the given group\n\r* `groupID` ID of the group to add to\n\r* `elementID` ID of the element to add",
			"args": "groupID:Int = -1, elementID:Int = -1",
			"returns": "LuaMessage"
		},
		"trace": {
			"documentation": "Prints a value to the debug console and in-game log\n\r* `value` Value to print",
			"args": "value:Dynamic",
			"returns": "LuaMessage"
		},
		"setGlobal": {
			"documentation": "Stores the given value at the given key in the global space\n\r* `key` Key to store at\n\r* `value` Value to store\n\r* `overwrite` Overwrites the value if already found",
			"args": "key:String = null, value:Dynamic = null, overwrite:Bool = false",
			"returns": "LuaMessage"
		},
		"setRaw": {
			"documentation": "Sets the raw value at the given path to the given value\n\r* `path` Path to the value request.\n\r* `value` Value to assign",
			"args": "path:String = null, value:Dynamic = null",
			"returns": "LuaMessage"
		},
		"setShared": {
			"documentation": "Stores in the shared space the given value at the given key\n\r* `key` Key to store at\n\r* `value` Value to store\n\r* `overwrite` Overwrites the value if already found\n\r* `inRoot` Store in root",
			"args": "key:String = null, value:Dynamic = null, overwrite:Bool = false, inRoot:Bool = true",
			"returns": "LuaMessage"
		},
		"removeGlobal": {
			"documentation": "Removes the value associated with the given key in the global space\n\r* `key` Key to remove",
			"args": "key:String = null",
			"returns": "LuaMessage"
		},
		"removeShared": {
			"documentation": "Removes in the shared space the value associated with the given key\n\r* `key` Key to remove",
			"args": "key:String = null",
			"returns": "LuaMessage"
		},
		"removeSprite": {
			"documentation": "Removes the sprite with the given ID\n\r* `id` ID of the sprite to remove\n\r* `forceDestroy` Force the game to destroy the sprite",
			"args": "id:Int = -1, forceDestroy:Bool = false",
			"returns": "LuaMessage"
		},
		"getGlobal": {
			"documentation": "Fetches the value associated with the given key in the global space\n\r* `key` Key to look for\n\r@return Value found",
			"args": "key:String = null",
			"returns": "LuaMessage<Dynamic>"
		},
		"makeGraphic": {
			"documentation": "Makes a graphic to the given sprite\n\r* `id` Sprite to make to\n\r* `width` Width of the graphic\n\r* `height` Height of the graphic\n\r* `color` Color of the graphic",
			"args": "id:Int = -1, width:Int = 0, height:Int = 0, color:String = null",
			"returns": "LuaMessage"
		},
		"callRaw": {
			"documentation": "Calls the method at the given path\n\r* `path` Path to the value request.\n\r* `args` Arguments of the call\n\r@return Result of the call",
			"args": "path:String = null, args:Dynamic = null",
			"returns": "LuaMessage<Null<Dynamic>>"
		},
		"getShared": {
			"documentation": "Fetches the value associated with the given key in the shared space\n\r* `key` Key to look for\n\r@return Value found",
			"args": "key:String = null",
			"returns": "LuaMessage<Dynamic>"
		},
		"removeGroup": {
			"documentation": "Removes the group with the given ID\n\r* `id` ID of the group to remove\n\r* `forceDestroy` Force the game to destroy the group",
			"args": "id:Int = -1, forceDestroy:Bool = false",
			"returns": "LuaMessage"
		},
		"addScript": {
			"documentation": "Opens a script with the given file\n\r* `file` File to open\n\r* `autoImport` Automatically imports all the built-in methods\n\r* `isRelated` Is the file related to the current script?",
			"args": "file:String = null, autoImport:Bool = true, isRelated:Bool = true",
			"returns": "LuaMessage<Null<Dynamic>>"
		},
		"switchState": {
			"documentation": "Switches to a new state powered by the given file\n\r* `file` File that manages the new state",
			"args": "file:String = null",
			"returns": "LuaMessage"
		},
		"getAllScripts": {
			"documentation": "Fetches all the scripts loaded",
			"args": "",
			"returns": "LuaMessage<Array<String>>"
		},
		"callMethod": {
			"documentation": "Calls the given method in this script and its children\n\r* `name` Name of the method to call\n\r* `args` Arguments to use\n\r@return Array<Null<Dynamic>> Results of the calls",
			"args": "name:String = null, args:Dynamic = null",
			"returns": "LuaMessage<Map<String, Null<Dynamic>>>"
		}
	}
}